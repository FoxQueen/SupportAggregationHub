
plugins {
    id 'java'
}

java {
    sourceCompatibility = JavaVersion.VERSION_11
    targetCompatibility = JavaVersion.VERSION_11
}

group 'com.fox'
version '1.0-SNAPSHOT'

repositories {
    mavenCentral()
}

dependencies {
    implementation 'com.amazonaws:aws-lambda-java-core:1.2.1'
    implementation 'com.amazonaws:aws-java-sdk-dynamodb:1.11.926'
    implementation 'com.google.code.gson:gson:2.7'

    implementation 'org.apache.logging.log4j:log4j-api:2.13.0'
    implementation 'org.apache.logging.log4j:log4j-core:2.13.0'
    implementation 'org.apache.logging.log4j:log4j-slf4j18-impl:2.13.0'
    implementation 'org.junit.jupiter:junit-jupiter-api:5.6.0'
    runtimeOnly 'org.junit.jupiter:junit-jupiter-engine'
}

test {
    useJUnitPlatform()
}

sourceSets {
    main {
        java {
            srcDir 'src'
        }
    }
}

// cache
task cacheZip(type: Zip) {
    archiveBaseName = 'cache'
    from compileJava
    from processResources
    into('lib') {
        from configurations.runtimeClasspath
    }
}

// connector
task connectorZip(type: Zip) {
    archiveBaseName = 'connector'
    from compileJava
    from processResources
    into('lib') {
        from configurations.runtimeClasspath
    }
}

// connector
task sterilizerZip(type: Zip) {
    archiveBaseName = 'sterilizer'
    from compileJava
    from processResources
    into('lib') {
        from configurations.runtimeClasspath
    }
}

// filter
task filterZip(type: Zip) {
    archiveBaseName = 'filter'
    from compileJava
    from processResources
    into('lib') {
        from configurations.runtimeClasspath
    }
}

// mapper
task mapperZip(type: Zip) {
    archiveBaseName = 'mapper'
    from compileJava
    from processResources
    into('lib') {
        from configurations.runtimeClasspath
    }
}

// reducer
task reducerZip(type: Zip) {
    archiveBaseName = 'reducer'
    from compileJava
    from processResources
    into('lib') {
        from configurations.runtimeClasspath
    }
}
